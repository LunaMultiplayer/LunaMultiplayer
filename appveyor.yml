# Reference: http://www.appveyor.com/docs/appveyor-yml
# Notes:
#   - Indent each level of configuration with 2 spaces. Do not use tabs!

#---------------------------------#
#      general configuration      #
#---------------------------------#

version: $(smallversion).{build}

# Do not build on tags (GitHub and BitBucket)
skip_tags: true
#Do not build if we change any of this files
skip_commits:
  files:
    - '**/*.md'
    - '**/*.editorconfig'
image: Visual Studio 2022

#---------------------------------#
#    environment configuration    #
#---------------------------------#

environment:
  smallversion: 0.29.0
  WEBHOOK_URL:
    secure: bhCOtyDF+wInocIkKfUQdxpM4csyVv7cxhUGz0NzLnFrlEZsaviEDJeDbctuv4NBM4xPkl4Wpv3rb6VwNcvEr8IWW5Te0P/kx1VeNMD5espcLKzMwy46shi630b3wvIipOeBnupc6nsiw7/2liuNhJkvjdyu4wxQXVDVWNSi+t0=
  ZIPPASSWORD:
    secure: aYtowPY3EEDAWEnow3/CajwQYL9PtdXpVdSqhC3f5X4=
cache:
  - packages -> **\packages.config
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}-$(configuration)'

#---------------------------------#
#       build configuration       #
#---------------------------------#

configuration:
 - Debug
 - Release
platform: Any CPU
before_build:
  # Skip PRs from foreign repos, they have no read access to ZIPPASSWORD
  - ps: if ("$env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME" -ne "" -And "$env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME" -ne "LunaMultiplayer/LunaMultiplayer") { Exit-AppVeyorBuild }
  - ps: 7z e "$env:appveyor_build_folder\External\KSPLibraries\KSPLibraries.7z" -p"$env:ZIPPASSWORD" -o"$env:appveyor_build_folder\External\KSPLibraries"
  - ps: mkdir "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\"
   #Copy harmony dependency
  - ps: xcopy /y /s "$env:appveyor_build_folder\External\Dependencies\Harmony" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData"
  - nuget restore
build:
  parallel: true
  verbosity: minimal
after_build:
 #Client post build commands
 - ps: mkdir "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Button"
 - ps: mkdir "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Plugins"
 - ps: mkdir "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Localization"
 - ps: mkdir "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\PartSync"
 - ps: mkdir "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Icons"
 - ps: mkdir "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Flags"
 - ps: copy "$env:appveyor_build_folder\LMP Readme.txt" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMP Readme.txt"
 - ps: copy "$env:appveyor_build_folder\LunaMultiplayer.version" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\LunaMultiplayer.version"
 - ps: xcopy /y "$env:appveyor_build_folder\LmpClient\Resources\*.*" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Button"
 - ps: xcopy /y "$env:appveyor_build_folder\LmpClient\bin\$env:configuration\*.*" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Plugins"
 - ps: xcopy /y /s "$env:appveyor_build_folder\LmpClient\Localization\XML\*.*" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Localization"
 - ps: xcopy /y /s "$env:appveyor_build_folder\LmpClient\ModuleStore\XML\*.*" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\PartSync"
 - ps: xcopy /y "$env:appveyor_build_folder\LmpClient\Resources\Icons\*.*" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Icons"
 - ps: xcopy /y "$env:appveyor_build_folder\LmpClient\Resources\Flags\*.*" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData\LunaMultiplayer\Flags"
 #Master server post build commands
 - ps: dotnet publish "$env:appveyor_build_folder\MasterServer\MasterServer.csproj" --configuration $env:CONFIGURATION --output "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPMasterServer" --os linux --self-contained false -p:PublishSingleFile=false
 #Server post build commands
 - ps: dotnet publish "$env:appveyor_build_folder\Server\Server.csproj" --configuration $env:CONFIGURATION --output "$env:appveyor_build_folder\FinalFiles\win-x64-$env:configuration\LMPServer" --os win --self-contained true -p:PublishSingleFile=false
 - ps: dotnet publish "$env:appveyor_build_folder\Server\Server.csproj" --configuration $env:CONFIGURATION --output "$env:appveyor_build_folder\FinalFiles\linux-x64-$env:configuration\LMPServer" --os linux --self-contained true -p:PublishSingleFile=false
 - ps: dotnet publish "$env:appveyor_build_folder\Server\Server.csproj" --configuration $env:CONFIGURATION --output "$env:appveyor_build_folder\FinalFiles\linux-arm64-$env:configuration\LMPServer" --os linux --arch arm64 --self-contained true -p:PublishSingleFile=false
 - ps: dotnet publish "$env:appveyor_build_folder\Server\Server.csproj" --configuration $env:CONFIGURATION --output "$env:appveyor_build_folder\FinalFiles\linux-arm-$env:configuration\LMPServer" --os linux --arch arm --self-contained true -p:PublishSingleFile=false
 - ps: dotnet publish "$env:appveyor_build_folder\Server\Server.csproj" --configuration $env:CONFIGURATION --output "$env:appveyor_build_folder\FinalFiles\any-$env:configuration\LMPServer" --self-contained false -p:PublishSingleFile=false
 #7zip everything
 - ps: 7z a "$env:appveyor_build_folder\LunaMultiplayer-Client-$env:configuration.zip" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMP Readme.txt" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPClient\GameData"
 - ps: 7z a "$env:appveyor_build_folder\LunaMultiplayer-Server-win-x64-$env:configuration.zip" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMP Readme.txt" "$env:appveyor_build_folder\FinalFiles\win-x64-$env:configuration\LMPServer"
 - ps: 7z a "$env:appveyor_build_folder\LunaMultiplayer-Server-linux-x64-$env:configuration.zip" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMP Readme.txt" "$env:appveyor_build_folder\FinalFiles\linux-x64-$env:configuration\LMPServer"
 - ps: 7z a "$env:appveyor_build_folder\LunaMultiplayer-Server-linux-arm64-$env:configuration.zip" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMP Readme.txt" "$env:appveyor_build_folder\FinalFiles\linux-arm64-$env:configuration\LMPServer"
 - ps: 7z a "$env:appveyor_build_folder\LunaMultiplayer-Server-linux-arm32-$env:configuration.zip" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMP Readme.txt" "$env:appveyor_build_folder\FinalFiles\linux-arm-$env:configuration\LMPServer"
 - ps: 7z a "$env:appveyor_build_folder\LunaMultiplayer-Server-any-$env:configuration.zip" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMP Readme.txt" "$env:appveyor_build_folder\FinalFiles\any-$env:configuration\LMPServer"
 - ps: 7z a "$env:appveyor_build_folder\LunaMultiplayerMasterServer-$env:configuration.zip" "$env:appveyor_build_folder\FinalFiles\$env:configuration\LMPMasterServer"

#Post it on discord
on_success:
  - ps: |
      if ($env:configuration -like "Debug") {
        Invoke-RestMethod https://raw.githubusercontent.com/LunaMultiplayer/LunaMultiplayer/master/appveyor_discord.ps1 -o appveyor_discord.ps1
        ./appveyor_discord.ps1 success $env:WEBHOOK_URL
      }


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
 - path: .\LunaMultiplayer-Client-$(configuration).zip
   name: LunaMultiplayer-Client-$(configuration).zip
 - path: .\LunaMultiplayer-Server-win-x64-$(configuration).zip
   name: LunaMultiplayer-Server-win-x64-$(configuration).zip
 - path: .\LunaMultiplayer-Server-linux-x64-$(configuration).zip
   name: LunaMultiplayer-Server-linux-x64-$(configuration).zip
 - path: .\LunaMultiplayer-Server-linux-arm64-$(configuration).zip
   name: LunaMultiplayer-Server-linux-arm64-$(configuration).zip
 - path: .\LunaMultiplayer-Server-linux-arm32-$(configuration).zip
   name: LunaMultiplayer-Server-linux-arm32-$(configuration).zip
 - path: .\LunaMultiplayer-Server-any-$(configuration).zip
   name: LunaMultiplayer-Server-any-$(configuration).zip
 - path: .\LunaMultiplayerMasterServer-$(configuration).zip
   name: LunaMultiplayerMasterServer-$(configuration).zip

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

deploy:
 - provider: GitHub
   tag: $(smallversion)-Draft
   release: Luna Multi Player Nightly
   description: |
    Build $(appveyor_build_version)

    **Nightly build! May contain (more) bugs and undocumented features or changes**

    Make sure to read [Create a server](https://github.com/LunaMultiplayer/LunaMultiplayer/wiki/Create-a-server) before creating a server.
   artifact: /LunaMultiplayer-(Client|Server)-.*\.zip/
   auth_token:
    secure: zWJqDvz3LjR2J358JIJKICwghW/DWRzs73KWb3KApTLOreA4c8DN1tos+O3qBMR7
   draft: false
   prerelease: true
   force_update: true
   on:
    branch: master

#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:

 - provider: Webhook
   url: http://godarklight.privatedns.org/dmp/lmp.php
   on_build_success: true
   on_build_failure: true
   on_build_status_changed: true
